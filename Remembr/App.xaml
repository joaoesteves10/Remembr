<Application x:Class="Remembr.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Remembr"
             xmlns:vm="clr-namespace:Remembr.ViewModels"
             xmlns:v="clr-namespace:Remembr.Views"
             StartupUri="\Views\MainWindow.xaml"
             xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
    <Application.Resources>

        <FontFamily x:Key="NEONLEDLight">pack://application:,,,/Resources/Fonts/NEONLEDLight.ttf#NEON LED Light</FontFamily>
        <FontFamily x:Key="MentoneLig">pack://application:,,,/Resources/Fonts/mentone-semibol.ttf#Mentone Lig</FontFamily>


        <Style x:Key="TextoLogin" TargetType="TextBlock">
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="TextAlignment" Value="Left"/>
            <Setter Property="Foreground" Value="#FF3F3F3F"/>
            <Setter Property="Grid.Column" Value="1"/>
            <Setter Property="Panel.ZIndex" Value="1"/>
        </Style>

        <Style x:Key="TextoNT" TargetType="TextBlock">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="TextAlignment" Value="Left"/>
            <Setter Property="Foreground" Value="#FF3F3F3F"/>
            <Setter Property="Grid.Column" Value="1"/>
            <Setter Property="Panel.ZIndex" Value="1"/>
        </Style>
        
        <Style x:Key="Nomedoutilizador" TargetType="TextBlock">
            <Setter Property="FontSize" Value="35"/>
            <Setter Property="TextAlignment" Value="Left"/>
            <Setter Property="Foreground" Value="#FF3F3F3F"/>
            <Setter Property="Grid.Column" Value="1"/>
            <Setter Property="Panel.ZIndex" Value="1"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>

        <Style x:Key="TextoWelcome" TargetType="TextBlock">
            <Setter Property="FontSize" Value="35"/>
            <Setter Property="TextAlignment" Value="Left"/>
            <Setter Property="Foreground" Value="#FF3F3F3F"/>
            <Setter Property="Grid.Column" Value="1"/>
            <Setter Property="Panel.ZIndex" Value="1"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>

        <Style x:Key="button" TargetType="Button">
            <Setter Property="FontSize" Value="20" />
            <Setter Property="Width" Value="170" />
            <Setter Property="Background" Value="#FFEBEBEB"/>
            <Setter Property="Foreground" Value="#FF3F3F3F"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template" >
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"  CornerRadius="10" BorderThickness="2" BorderBrush="#FF3F3F3F" Padding="15">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#cccccc" />
                    <Setter Property="Foreground" Value="#FF3F3F3F" />
                </Trigger>
                <Trigger Property="IsMouseCaptured" Value="True">
                    <Setter Property="Background" Value="#cccccc" />
                    <Setter Property="Foreground" Value="#FF3F3F3F" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="NTbutton" TargetType="Button">
            <Setter Property="FontSize" Value="18" />
            <Setter Property="Width" Value="170" />
            <Setter Property="Background" Value="#FFEBEBEB"/>
            <Setter Property="Foreground" Value="#FF3F3F3F"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template" >
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"  CornerRadius="10" BorderThickness="2" BorderBrush="#FF3F3F3F">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#cccccc" />
                    <Setter Property="Foreground" Value="#FF3F3F3F" />
                </Trigger>
                <Trigger Property="IsMouseCaptured" Value="True">
                    <Setter Property="Background" Value="#cccccc" />
                    <Setter Property="Foreground" Value="#FF3F3F3F" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="PageButton" TargetType="Button">
            <Setter Property="FontSize" Value="20" />
            <Setter Property="Width" Value="170" />
            <Setter Property="Background" Value="#565656"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template" >
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"  CornerRadius="0,25,25,0"  Padding="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#cccccc" />
                    <Setter Property="Foreground" Value="#FF3F3F3F" />
                </Trigger>
                <Trigger Property="IsMouseCaptured" Value="True">
                    <Setter Property="Background" Value="#cccccc" />
                    <Setter Property="Foreground" Value="#FF3F3F3F" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ButtonTarefas" TargetType="Button">
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#FF3F3F3F"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template" >
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"  Padding="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#cccccc" />
                    <Setter Property="Foreground" Value="#FF3F3F3F" />
                </Trigger>
                <Trigger Property="IsMouseCaptured" Value="True">
                    <Setter Property="Background" Value="#cccccc" />
                    <Setter Property="Foreground" Value="#FF3F3F3F" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="TextBox"  TargetType="Control">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Grid.Column" Value="1" />
            <Setter Property="Margin" Value="10 0 0 0" />
            <Setter Property="Foreground" Value="#878787" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="10"/>
            <Style.Triggers>

            </Style.Triggers>
        </Style>

        <Style x:Key="Closebutton" TargetType="Ellipse">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Fill" Value="Red"/>
                </Trigger>
                <Trigger Property="IsMouseCaptured" Value="True">
                    <Setter Property="Fill" Value="Red"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="Hidebutton" TargetType="Ellipse">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Fill" Value="Red"/>
                </Trigger>
                <Trigger Property="IsMouseCaptured" Value="True">
                    <Setter Property="Fill" Value="Red"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="CheckBoxStyle1" TargetType="{x:Type CheckBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <BulletDecorator Background="Transparent" SnapsToDevicePixels="true">
                            <BulletDecorator.Bullet>
                                <Border Background="#FFAEB3B9" BorderThickness="2" CornerRadius="10">
                                    <Microsoft_Windows_Themes:BulletChrome IsChecked="{TemplateBinding IsChecked}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}"/>
                                </Border>
                            </BulletDecorator.Bullet>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </BulletDecorator>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!--Estilo combobox-->

        <Style x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="32" />
                            </Grid.ColumnDefinitions>
                            <Border
                          x:Name="Border"
                          Grid.ColumnSpan="2"
                          CornerRadius="8"
                          Background="{TemplateBinding Background}"
                          BorderBrush="#FF3F3F3F"
                          BorderThickness="2" 
                        />

                            <Path
                            x:Name="Arrow"
                            Grid.Column="1"    
                            Fill="{TemplateBinding Foreground}"
                            Stroke="{TemplateBinding Foreground}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="M 0 0 L 4 4 L 8 0 Z"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
            <Border x:Name="PART_ContentHost" Focusable="True" />
        </ControlTemplate>

        <Style x:Key="theComboBox" TargetType="{x:Type ComboBox}">
            <Setter Property="Foreground" Value="#FF3F3F3F" />
            <Setter Property="BorderBrush" Value="Gray" />
            <Setter Property="Background" Value="White" />
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="FontSize" Value="13" />
            <Setter Property="MinWidth" Value="150"/>
            <Setter Property="MinHeight" Value="35"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton
                            Cursor="Hand"
                            Name="ToggleButton"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            Foreground="{TemplateBinding Foreground}"
                            Style="{StaticResource ComboBoxToggleButton}"
                            Grid.Column="2"
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press"/>

                            <ContentPresenter
                            IsHitTestVisible="False"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="10,3,30,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}"
                            Template="{StaticResource ComboBoxTextBox}"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Margin="3,3,23,3"
                            Focusable="True"                               
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True"
                            Focusable="False"
                            PopupAnimation="Slide">
                                <Grid
                              Name="DropDown"
                              SnapsToDevicePixels="True"               
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border
                                    CornerRadius="8"
                                    x:Name="DropDownBorder"
                                    Background="White"
                                    BorderThickness="1"
                                    BorderBrush="#FF3F3F3F"
                                    />
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>

                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger Property="IsEditable" Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>
        <Style x:Key="theComboBoxItem" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border
                        Name="Border"
                        Padding="5"
                        Margin="2"
                        BorderThickness="4,0,0,0"
                        CornerRadius="0"
                        Background="Transparent"
                        BorderBrush="Transparent">
                            <TextBlock TextAlignment="Left">
                            <ContentPresenter />
                            </TextBlock>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="BorderBrush" Value="#FF3F3F3F"/>
                                <Setter TargetName="Border" Property="Background" Value="#F8FAEB"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <DataTemplate DataType="{x:Type vm:RegistoVM}">
            <v:Registo/>
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:LoginVM}">
            <v:Login/>
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:CalendarioVM}">
            <v:Calendario/>
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:TarefasApagadasVM}">
            <v:TarefasApagadas/>
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:TarefasExecVM}">
            <v:TarefasExec/>
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:TarefasPorIniciarVM}">
            <v:TarefasPorIniciar/>
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:TarefasTerminadasVM}">
            <v:TarefasTerminadas/>
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:NovaTarefaVM}">
            <v:NovaTarefa/>
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:EditarTarefaVM}">
            <v:EditarTarefa/>
        </DataTemplate>

    </Application.Resources>
</Application>
